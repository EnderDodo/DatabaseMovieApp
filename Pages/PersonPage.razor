@page "/person/{personId:int}"
@inject DataExtractor Extractor

@if (_person != null)
{
    <PageTitle>@_person.Name</PageTitle>
    <div class="d-grid">
        <div class="d-inline-flex">
            @if (!string.IsNullOrEmpty(_imageLink))
            {
                <img src="@_imageLink"
                     width="400px" height="400px"
                     alt="@_person.Name, фото не найдено"/>
            }
            @if (string.IsNullOrEmpty(_imageLink))
            {
                <img src="https://i.pinimg.com/736x/70/aa/ba/70aaba8a839d4b8e1821d15ebaf82501.jpg"
                     width="400px" height="400px"
                     alt="@_person.Name, ссылка на фото не найдена"/>
            }
            <div class="row m-3">
                <h3>@_person.Name</h3>
            </div>
        </div>
        <div class="mt-4">
            <h3>Связанные Фильмы: </h3>
        </div>
        @if (_movies != null)
        {
            int index = 1;
            <div>
                <table class="table">
                    <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Фильмы</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var movie in _movies.OrderByDescending(m => m.Rating))
                    {
                        <tr>
                            <th scope="row">@index</th>
                            <td>
                                <MovieItem Movie="movie"></MovieItem>
                            </td>
                        </tr>

                        index++;
                    }
                    </tbody>
                </table>
            </div>
        }
    </div>
}

@code {

    [Parameter]
    public int PersonId { get; set; }

    private Person? _person;
    private string? _imageLink;

    private List<Movie>? _movies;

    protected override async Task OnParametersSetAsync()
    {
        _person = Extractor.GetPersonById(PersonId);

        if (_person != null)
        {
            _imageLink = await Extractor.GetPersonImageLinkByNameAsync(_person.Name);
            _movies = Extractor.GetMoviesByPersonName(_person.Name);
        }
    }

}